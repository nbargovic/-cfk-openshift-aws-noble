
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server:7.8.0-2-ubi8.arm64
    init: confluentinc/confluent-init-container:2.10.0.arm64
  dataVolumeCapacity: 10Gi
  tls:
    secretRef: tls-ksqldb
  authorization:
    type: rbac
  configOverrides:
    server:
      - "confluent.metadata.enable.server.urls.refresh=false"
      - "ksql.confluent.metadata.enable.server.urls.refresh=false"
      - "confluent.support.metrics.enable=false"
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: ksqldb-mds-client
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: fios-router.home
  podTemplate:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: "kubernetes.io/hostname"
                  operator: In
                  values: [ "alonso" ]
    probe:
      readiness:
        initialDelaySeconds: 180
      liveness:
        initialDelaySeconds: 180
    resources:
      limits:
        memory: 4Gi
        cpu: 2
    podSecurityContext:
      runAsUser: 0
  license:
    globalLicense: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.8.0-2-ubi8.arm64
    init: confluentinc/confluent-init-container:2.10.0.arm64
  tls:
    secretRef: tls-schemaregistry
  authorization:
    type: rbac
  configOverrides:
    server:
      - "confluent.metadata.enable.server.urls.refresh=false"
      - "kafkastore.confluent.metadata.enable.server.urls.refresh=false"
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: sr-mds-client
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: fios-router.home
  podTemplate:
    resources:
      limits:
        memory: 1800M
        cpu: 2
    podSecurityContext:
      runAsUser: 0
    tolerations:
      - key: "allowOnMaster"
        operator: "Exists"
        effect: "NoSchedule"
  license:
    globalLicense: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: bargovic/cp-server-connect:7.8.0-2-ubi8.arm64.1
    init: confluentinc/confluent-init-container:2.10.0.arm64
  tls:
    secretRef: tls-connect
  authorization:
    type: rbac
  configOverrides:
    server:
      - "confluent.metadata.enable.server.urls.refresh=false"
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: connect-mds-client
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: fios-router.home
  podTemplate:
    resources:
      limits:
        memory: 2Gi
        cpu: 2
    probe:
      readiness:
        initialDelaySeconds: 360
      liveness:
        initialDelaySeconds: 360
    podSecurityContext:
      runAsUser: 0
  license:
    globalLicense: true
